from fastapi import APIRouter, Depends
from sqlalchemy.ext.asyncio import AsyncSession
from app.db.dependencies import get_async_session
from app.schemas.user import UserCreate, UserOut
from app.crud.user import create_user
from fastapi import HTTPException
import traceback

router = APIRouter()

@router.post("/users/", response_model=UserOut)
async def register_user(user: UserCreate, db: AsyncSession = Depends(get_async_session)):
    try:
        print("üì• –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º:", user)
        result = await create_user(db, user)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ:", result)
        return result
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
        traceback.print_exc()  # <--- –ø–æ–∫–∞–∂–µ—Ç, –≤ —á—ë–º –æ—à–∏–±–∫–∞
        raise HTTPException(status_code=500, detail="–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: " + str(e))
